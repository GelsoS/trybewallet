{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2022-08-02T15:06:02.242Z",
    "end": "2022-08-02T15:06:20.972Z",
    "duration": 18730,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0c3fefa7-fa00-4e73-8fa6-4550125333ff",
      "title": "",
      "fullFile": "cypress/integration/09.EditExpense_spec.js",
      "file": "cypress/integration/09.EditExpense_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "523edacd-2d2e-4530-b0f7-3646012ebf00",
          "title": "9 - Crie um botão para editar uma despesa da tabela contendo as seguintes características:",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "O botão deve estar dentro do último item da linha da tabela e deve possuir `data-testid=\"edit-btn\"`",
              "fullTitle": "9 - Crie um botão para editar uma despesa da tabela contendo as seguintes características: O botão deve estar dentro do último item da linha da tabela e deve possuir `data-testid=\"edit-btn\"`",
              "timedOut": null,
              "duration": 4382,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('tbody tr').first().find('td').last().find(`button[data-testid=\"${_constants.BTN_EDIT_TEST_ID}\"]`).should('exist');\ncy.getByTestId(_constants.BTN_EDIT_TEST_ID).should('have.length', 2);",
              "err": {},
              "uuid": "2faa1c98-ad75-4ac0-91c2-c22f141d5522",
              "parentUUID": "523edacd-2d2e-4530-b0f7-3646012ebf00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "O botão habilita um formulário para editar a linha da tabela ao ser clicado, após clicar em \"Editar despesa\" a despesa é atualizada e atualiza a soma de despesas no header.",
              "fullTitle": "9 - Crie um botão para editar uma despesa da tabela contendo as seguintes características: O botão habilita um formulário para editar a linha da tabela ao ser clicado, após clicar em \"Editar despesa\" a despesa é atualizada e atualiza a soma de despesas no header.",
              "timedOut": null,
              "duration": 11644,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.getByTestId(_constants.BTN_EDIT_TEST_ID).first().click();\ncy.contains(/Adicionar despesa/i).should('not.exist');\ncy.contains(/Editar despesa/i).should('exist');\n(0, _helperFunctions.editExpense)({\n  value: '200',\n  currency: 'CAD',\n  method: 'Dinheiro',\n  tag: 'Saúde',\n  description: 'Duzentos dólares canadenses'\n});\nconst expectedTableRow = ['Duzentos dólares canadenses', 'Saúde', 'Dinheiro', '200.00', 'Dólar Canadense/Real Brasileiro', '3.76', '751.18', 'Real'];\nconst deleteBtn = 1;\ncy.get('tbody tr').first().find('td').should('have.length', expectedTableRow.length + deleteBtn);\ncy.wrap(expectedTableRow).each(expectedValue => {\n  cy.get('tbody tr').first().find('td').contains(expectedValue);\n});\ncy.getByTestId(_constants.TOTAL_FIELD_TEST_ID).should('have.text', '776.81');\nconst expectedExpenses = [{\n  id: 0,\n  value: '200',\n  currency: 'CAD',\n  method: 'Dinheiro',\n  tag: 'Saúde',\n  description: 'Duzentos dólares canadenses',\n  exchangeRates: _data.mockData\n}, _objectSpread(_objectSpread({}, _constants.initialExpenses[1]), {}, {\n  id: 1,\n  exchangeRates: _data.mockData\n})];\ncy.window().its('store').invoke('getState').its('wallet.expenses').should('deep.equal', expectedExpenses);",
              "err": {
                "message": "CypressError: Timed out retrying after 10050ms: `cy.select()` failed because this element:\n\n`<select data-testid=\"currency-input\" label=\"moeda\" name=\"currency\">...</select>`\n\nis being covered by another element:\n\n`<iframe style=\"position: fixed; top: 0px; left: 0px; width: 100%; height: 100%; border: none; z-index: 2147483647;\"></iframe>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `9 - Crie um botão para edit...`",
                "estack": "CypressError: Timed out retrying after 10050ms: `cy.select()` failed because this element:\n\n`<select data-testid=\"currency-input\" label=\"moeda\" name=\"currency\">...</select>`\n\nis being covered by another element:\n\n`<iframe style=\"position: fixed; top: 0px; left: 0px; width: 100%; height: 100%; border: none; z-index: 2147483647;\"></iframe>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `9 - Crie um botão para edit...`\n    at $Cy.ensureDescendents (http://localhost:3000/__cypress/runner/cypress_runner.js:168905:78)\n    at ensureDescendents (http://localhost:3000/__cypress/runner/cypress_runner.js:154402:8)\n    at ensureDescendentsAndScroll (http://localhost:3000/__cypress/runner/cypress_runner.js:154409:14)\n    at ensureElIsNotCovered (http://localhost:3000/__cypress/runner/cypress_runner.js:154541:5)\n    at runAllChecks (http://localhost:3000/__cypress/runner/cypress_runner.js:154731:52)\n    at retryActionability (http://localhost:3000/__cypress/runner/cypress_runner.js:154755:16)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:13022:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:10296:29)\n    at whenStable (http://localhost:3000/__cypress/runner/cypress_runner.js:173835:65)\n    at http://localhost:3000/__cypress/runner/cypress_runner.js:173290:14\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:11139:18)\n    at Promise._fulfill (http://localhost:3000/__cypress/runner/cypress_runner.js:11083:18)\nFrom Your Spec Code:\n    at fillExpenseForm (http://localhost:3000/__cypress/tests?p=cypress/integration/09.EditExpense_spec.js:577:53)\n    at addExpense (http://localhost:3000/__cypress/tests?p=cypress/integration/09.EditExpense_spec.js:600:3)\nat Array.forEach (<anonymous>)\n    at addExpense (http://localhost:3000/__cypress/tests?p=cypress/integration/09.EditExpense_spec.js:597:17)\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/integration/09.EditExpense_spec.js:169:37)",
                "diff": null
              },
              "uuid": "e8c5dd32-bbd4-4e96-be21-fbf7fd9b6ce7",
              "parentUUID": "523edacd-2d2e-4530-b0f7-3646012ebf00",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2faa1c98-ad75-4ac0-91c2-c22f141d5522"
          ],
          "failures": [
            "e8c5dd32-bbd4-4e96-be21-fbf7fd9b6ce7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 16026,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}