{"version":3,"sources":["components/service/api.js","redux/actions/index.js","pages/Login.js","components/Header.js","components/Table.js","components/WalletForm.js","pages/Wallet.js","App.js","redux/reducers/user.js","redux/reducers/wallet.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.js"],"names":["getCurrency","fetch","then","response","json","informacoes","payload","type","editItem","Login","handleChange","bind","habilita","login","state","email","password","habilitar","target","name","value","this","setState","emailtest","RegExp","test","length","props","usuario","push","history","className","placeholder","onChange","onClick","disabled","React","Component","connect","dispatch","username","Header","info","allExpenses","reduce","acc","curr","parseFloat","exchangeRates","currency","ask","toFixed","user","wallet","expenses","Table","delete","deleteButton","filter","d","salvarId","c","id","border","map","i","key","description","tag","method","Number","codein","Math","random","despesa","alimentacao","WalletForm","limparState","salvarEdicao","moedaApi","prev","editor","edit","botaoClic","idToEdit","editado","element","allCurency","label","all","currencies","infos","obj","ed","objeto","objetoUnido","concat","newset","Set","sort","a","b","Wallet","App","exact","path","component","INIT_STATE","action","INIT","Object","keys","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b3b3489c.chunk.js","sourcesContent":["const link = 'https://economia.awesomeapi.com.br/json/all';\n\nconst getCurrency = () => (\n  fetch(link)\n    .then((response) => (\n      response.json()\n    ))\n);\n\nexport default getCurrency;\n","import getCurrency from '../../components/service/api';\n\nexport const user = (value) => ({\n  type: 'USER',\n  value,\n});\n\nexport const getApi = (value) => ({\n  type: 'API',\n  value,\n});\n\nexport const informacoes = (payload) => ({\n  type: 'DADOS',\n  payload,\n});\n\nexport const deleteItem = (payload) => ({\n  type: 'DELL',\n  payload,\n});\n\nexport const editItem = (payload) => ({\n  type: 'EDIT',\n  payload,\n});\n\nexport const salvaID = (payload) => ({\n  type: 'salvarID',\n  payload,\n});\n\nexport const currentThunk = () => async (dispatch) => {\n  const response = await getCurrency();\n\n  dispatch(getApi(response));\n};\n\nexport const currentThunkClic = (value) => async (dispatch) => {\n  const response = await getCurrency();\n  const payload = {\n    ...value,\n    exchangeRates: response,\n  };\n  dispatch(informacoes(payload));\n};\n\nexport const edicao = (ed, objeto) => async (dispatch) => {\n  const response = await getCurrency();\n\n  const { value, description, currency, method, tag, id } = ed;\n  const payload = {\n    id,\n    value,\n    description,\n    currency,\n    method,\n    tag,\n    exchangeRates: response,\n  };\n  const objetoUnido = objeto.concat(objeto, payload);\n  const newset = [...new Set(objetoUnido)];\n  newset.sort((a, b) => a.id - b.id);\n  dispatch(editItem(newset));\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { user } from '../redux/actions';\nimport '../css/login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.habilita = this.habilita.bind(this);\n    this.login = this.login.bind(this);\n    this.state = {\n      email: '',\n      password: '',\n      habilitar: true,\n    };\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value }, this.habilita);\n  }\n\n  habilita() {\n    const cinco = 5;\n    const { password, email } = this.state;\n    const regex = new RegExp(/[a-z0-9]+@([\\w-]+\\.)+[\\w-]{2,3}$/i);\n    const emailtest = regex.test(email);\n    // console.log(regex.test('gelso02@live.com'));\n\n    if (password.length > cinco && emailtest) {\n      this.setState(\n        {\n          habilitar: false,\n        },\n      );\n    } else {\n      this.setState(\n        {\n          habilitar: true,\n        },\n      );\n    }\n  }\n\n  login() {\n    const { usuario, history: { push } } = this.props;\n    const { email } = this.state;\n    usuario(email);\n    push('/carteira');\n  }\n\n  render() {\n    const { habilitar } = this.state;\n\n    return (\n      <div>\n        <section className=\"section\">\n          E-mail:\n          <input\n            className=\"input\"\n            name=\"email\"\n            type=\"email\"\n            data-testid=\"email-input\"\n            placeholder=\"E-mail\"\n            onChange={ this.handleChange }\n\n          />\n          Senha:\n          <input\n            className=\"input\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Senha\"\n            data-testid=\"password-input\"\n            onChange={ this.handleChange }\n\n          />\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={ this.login }\n            disabled={ habilitar }\n          >\n            Entrar\n          </button>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  usuario: (username) => dispatch(user(username)),\n});\n\nLogin.propTypes = {\n  usuario: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../css/header.css';\n\nclass Header extends Component {\n  render() {\n    const { info, allExpenses } = this.props;\n    return (\n      <div className=\"div\">\n        <span data-testid=\"email-field\">{info}</span>\n        <section className=\"moeda\">\n          <span data-testid=\"total-field\">\n            {allExpenses.reduce((acc, curr) => (acc + parseFloat(curr.value)\n            * parseFloat(curr.exchangeRates[curr.currency].ask)), 0).toFixed(2)}\n          </span>\n          <span data-testid=\"header-currency-field\">BRL</span>\n        </section>\n\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  info: state.user.email,\n  allExpenses: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  info: PropTypes.string.isRequired,\n  allExpenses: PropTypes.arrayOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../css/table.css';\nimport PropTypes from 'prop-types';\nimport { deleteItem, salvaID } from '../redux/actions';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.delete = this.delete.bind(this);\n    this.editItem = this.editItem.bind(this);\n  }\n\n  delete(curr) {\n    const { expenses, deleteButton } = this.props;\n    const expensesFilt = expenses.filter((d) => d !== curr);\n    deleteButton(expensesFilt);\n  }\n\n  editItem(curr) {\n    const { expenses, salvarId } = this.props;\n    const edit = expenses.filter((c) => c === curr);\n    salvarId(edit[0].id);\n  }\n\n  render() {\n    const { expenses } = this.props;\n    return (\n      <table border=\"1\" className=\"table\">\n        <thead>\n          <tr>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n        </thead>\n        <tbody>\n\n          { expenses.map((curr, i) => (\n            <tr key={ i }>\n              <td>{curr.description}</td>\n              <td>{curr.tag}</td>\n              <td>{curr.method}</td>\n              <td>{Number(curr.value).toFixed(2)}</td>\n              <td>{curr.exchangeRates[curr.currency].name}</td>\n              <td>{Number(curr.exchangeRates[curr.currency].ask).toFixed(2)}</td>\n              <td>\n                {(Number(curr.value)\n            * parseFloat(curr.exchangeRates[curr.currency].ask)).toFixed(2)}\n              </td>\n              <td>{curr.exchangeRates[curr.currency].codein}</td>\n              <td>\n                <button\n                  key={ Math.random() }\n                  onClick={ () => this.editItem(curr) }\n                  className=\"edit\"\n                  type=\"button\"\n                  data-testid=\"edit-btn\"\n                >\n                  Editar\n                </button>\n                <button\n                  key={ curr.id }\n                  onClick={ () => this.delete(curr) }\n                  className=\"del\"\n                  type=\"button\"\n                  data-testid=\"delete-btn\"\n                >\n                  Excluir\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteButton: (despesa) => dispatch(deleteItem(despesa)),\n  salvarId: (info) => dispatch(salvaID(info)),\n});\n\nTable.propTypes = {\n  expenses: PropTypes.arrayOf(Object).isRequired,\n  deleteButton: PropTypes.func.isRequired,\n  salvarId: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { currentThunk, currentThunkClic, edicao } from '../redux/actions';\nimport '../css/form.css';\n\nconst alimentacao = 'Alimentação';\nclass WalletForm extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.limparState = this.limparState.bind(this);\n    this.salvarEdicao = this.salvarEdicao.bind(this);\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: alimentacao,\n      exchangeRates: [],\n    };\n  }\n\n  componentDidMount() {\n    const { moedaApi } = this.props;\n    moedaApi();\n  }\n\n  limparState() {\n    this.setState((prev) => (\n      {\n        id: prev.id + 1,\n        value: '',\n        description: '',\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: alimentacao,\n        exchangeRates: [],\n      }\n    ));\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState(\n      {\n        [name]: value,\n      },\n    );\n  }\n\n  salvarEdicao() {\n    const { value, description, currency, method, tag } = this.state;\n    const { editor, edit, botaoClic, expenses, idToEdit } = this.props;\n    const editado = expenses.filter((element) => element.id !== idToEdit);\n\n    if (editor) {\n      const ed = {\n        id: Number(idToEdit),\n        value,\n        description,\n        currency,\n        method,\n        tag,\n      };\n      edit(ed, editado);\n    } else {\n      botaoClic(this.state);\n      this.limparState();\n    }\n  }\n\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n    const { allCurency, editor } = this.props;\n    return (\n      <fieldset>\n        Valor:\n        <input\n          type=\"number\"\n          data-testid=\"value-input\"\n          placeholder=\"valor\"\n          name=\"value\"\n          value={ value }\n          onChange={ this.handleChange }\n        />\n\n        Descricao:\n        <input\n          type=\"text\"\n          data-testid=\"description-input\"\n          placeholder=\"descricao\"\n          name=\"description\"\n          value={ description }\n          onChange={ this.handleChange }\n        />\n\n        Moeda:\n        <select\n          data-testid=\"currency-input\"\n          label=\"moeda\"\n          name=\"currency\"\n          value={ currency }\n          onChange={ this.handleChange }\n        >\n          {allCurency.map((all, i) => <option key={ i }>{all}</option>)}\n\n        </select>\n\n        Modo de pagamento:\n        <select\n          label=\"pagamento\"\n          data-testid=\"method-input\"\n          name=\"method\"\n          value={ method }\n          onChange={ this.handleChange }\n        >\n          <option>Dinheiro</option>\n          <option>Cartão de crédito</option>\n          <option>Cartão de débito</option>\n        </select>\n\n        Categoria:\n        <select\n          data-testid=\"tag-input\"\n          label=\"despesa\"\n          name=\"tag\"\n          value={ tag }\n          onChange={ this.handleChange }\n        >\n          <option>Alimentação</option>\n          <option>Lazer</option>\n          <option>Trabalho</option>\n          <option>Transporte</option>\n          <option>Saúde</option>\n        </select>\n\n        <button\n          className=\"add\"\n          type=\"button\"\n          onClick={ this.salvarEdicao }\n        >\n          {!editor ? 'Adicionar despesa' : 'Editar despesa'}\n\n        </button>\n\n      </fieldset>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  allCurency: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  exchangeRates: state.wallet.expenses,\n  editor: state.wallet.editor,\n  idToEdit: state.wallet.idToEdit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  moedaApi: () => dispatch(currentThunk()),\n  botaoClic: (infos) => dispatch(currentThunkClic(infos)),\n  edit: (edit, obj) => dispatch(edicao(edit, obj)),\n});\n\nWalletForm.propTypes = {\n  moedaApi: PropTypes.func,\n  botaoClic: PropTypes.func,\n  editor: PropTypes.bool,\n  idToEdit: PropTypes.number,\n  expenses: PropTypes.arrayOf(Array),\n  edit: PropTypes.func,\n  allCurency: PropTypes.arrayOf(Array),\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n","import React from 'react';\nimport Header from '../components/Header';\nimport Table from '../components/Table';\nimport WalletForm from '../components/WalletForm';\n\nclass Wallet extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <WalletForm />\n        <Table />\n      </div>\n    );\n  }\n}\n\nexport default Wallet;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route path=\"/carteira\" component={ Wallet } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nconst INIT_STATE = {\n  email: '',\n};\n\nfunction user(state = INIT_STATE, action) {\n  switch (action.type) {\n  case 'USER':\n    return {\n      ...state,\n      email: action.value,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default user;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nconst INIT = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0,\n};\n\nfunction currency(state = INIT, action) {\n  switch (action.type) {\n  case 'API':\n    return {\n      ...state,\n      currencies: Object.keys(action.value).filter((a) => (\n        a !== 'USDT'\n      )),\n    };\n\n  case 'DADOS':\n    return {\n      ...state,\n      expenses: [\n        ...state.expenses,\n        action.payload,\n      ],\n    };\n\n  case 'DELL':\n    return {\n      currencies: [...state.currencies],\n      expenses: action.payload,\n    };\n\n  case 'EDIT':\n    return {\n      currencies: [...state.currencies],\n      expenses: action.payload,\n      editor: !state.editor,\n      idToEdit: action.payload.id,\n    };\n\n  case 'salvarID':\n    return {\n      ...state,\n      idToEdit: action.payload,\n      editor: true,\n    };\n\n  default:\n    return state;\n  }\n}\n\nexport default currency;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\nconst rootReducer = combineReducers({ user, wallet });\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}